---
- name: Provision VPC, Subnet, Security Group, Internet Gateway, Route Table, and EC2 Instance
  hosts: localhost
  gather_facts: false
  vars:
    region: us-east-1
    vpc_cidr: 10.0.0.0/16
    subnet_cidr: 10.0.1.0/24
    instance_type: t2.micro
    ami_id: ami-084568db4383264d4  # Replace with a valid Ubuntu AMI for your region
    key_name: task  # Replace with your key pair name
  tasks:
    - name: Create VPC
      amazon.aws.ec2_vpc_net:
        name: ansible-vpc
        cidr_block: "{{ vpc_cidr }}"
        region: "{{ region }}"
        state: present
      register: vpc

    - name: Create Subnet
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        cidr: "{{ subnet_cidr }}"
        region: "{{ region }}"
        az: "{{ region }}a"
        map_public: true
        state: present
        tags:
          Name: ansible-subnet
      register: subnet

    - name: Create Internet Gateway
      amazon.aws.ec2_vpc_igw:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        state: present
        tags:
          Name: ansible-igw
      register: igw

    - name: Create Route Table
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        state: present
        tags:
          Name: ansible-route-table
      register: route_table

    - name: Add Route to Internet Gateway
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        route_table_id: "{{ route_table.route_table.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"  # Corrected to use igw.gateway_id
        state: present

    - name: Associate Route Table with Subnet
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        route_table_id: "{{ route_table.route_table.id }}"
        subnets:
          - "{{ subnet.subnet.id }}"
        state: present

    - name: Create Security Group
      amazon.aws.ec2_security_group:
        name: ansible-security-group
        description: Security group for Ansible-managed EC2 instances
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0  # Restrict to your IP in production
        state: present
      register: security_group

    - name: Launch EC2 instance
      amazon.aws.ec2_instance:
        region: "{{ region }}"
        instance_type: "{{ instance_type }}"
        image_id: "{{ ami_id }}"
        key_name: "{{ key_name }}"
        vpc_subnet_id: "{{ subnet.subnet.id }}"
        security_groups: ["{{ security_group.group_id }}"]
        count: 1
        state: present
        network:
          assign_public_ip: true
        tags:
          Name: ansible-ec2-instance
      register: ec2
